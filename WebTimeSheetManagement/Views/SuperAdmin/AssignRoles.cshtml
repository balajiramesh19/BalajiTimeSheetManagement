@model WebTimeSheetManagement.Models.AssignRolesModel
@{
    ViewBag.Title = "AssignRoles";
    Layout = "~/Views/Shared/_LayoutSuperAdmin.cshtml";
}



<link href="~/Scripts/dataTablesScripts/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/Scripts/dataTablesScripts/responsive.bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/dataTablesScripts/jquery.dataTables.min.js"></script>
<script src="~/Scripts/dataTablesScripts/dataTables.bootstrap4.min.js"></script>
<style type="text/css">
    #scrolly {
        width: 1000px;
        height: 450px;
        overflow: auto;
        overflow-y: hidden;
        margin: 0 auto;
        white-space: nowrap;
    }
</style>
    <div class="panel panel-default">
        <div class="panel-heading">Choose Admin</div>
        <div class="panel-body">

            @if (TempData["MessageRoles"] != null)
            {
                <p class="alert alert-success" id="successMessage">@TempData["MessageRoles"] </p>
            }

            @if (TempData["MessageErrorRoles"] != null)
            {
                <p class="alert alert-danger" id="successMessage">@TempData["MessageErrorRoles"] </p>
            }

            @Html.AntiForgeryToken()

            <div class="row">
                <div class="col-md-4">
                    @Html.DropDownListFor(a => a.RegistrationID, new SelectList(Model.ListofAdmins, "RegistrationID", "Name"), new { @id="adminAssigned", @class = "form-control" })
                    @Html.ValidationMessageFor(a => a.RegistrationID)
                </div>
                <div class="col-md-4">
                </div>
                <div class="col-md-4">
                </div>
            </div>


        </div>
    </div>
    @*<div class="panel panel-default">
            <div class="panel-heading">Choose Users To Assign to Admin</div>
            <div class="panel-body">
                <div class="clearfix"></div>
                <div class="row">


                    @for (var i = 0; i < Model.ListofUser.Count(); i++)
                    {
                        <div class="col-md-4">
                            <div>
                                @Html.CheckBoxFor(it => Model.ListofUser[i].selectedUsers)
                                <label>
                                    @Html.DisplayFor(it => Model.ListofUser[i].Name)
                                    @Html.HiddenFor(it => Model.ListofUser[i].RegistrationID)
                                    @Html.HiddenFor(it => Model.ListofUser[i].Name)
                                </label>
                            </div>
                        </div>


                    }


                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-offset-0 col-md-12">
                            <input type="submit" value="Assign Role" class="btn btn-success" />

                            @Html.ActionLink("Cancel", "Dashboard", "SuperAdmin", null, new { @class = "btn btn-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>*@

    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">Roles</div>
                <div class="panel-body">

                    <table id="myTable" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>RegistrationID</th>
                                <th>Name</th>
                            </tr>
                        </thead>
                    </table>
                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-offset-0 col-md-12">
                                <input type="submit" value="Assign Role" class="btn btn-success" onclick="submit1('asd')" />
                                @Html.ActionLink("Cancel", "Dashboard", "SuperAdmin", null, new { @class = "btn btn-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <link href="https://cdn.datatables.net/s/dt/dt-1.10.10,se-1.1.0/datatables.min.css" rel="stylesheet" />
    <link href="https://gyrocode.github.io/jquery-datatables-checkboxes/1.2.6/css/dataTables.checkboxes.css" rel="stylesheet" />

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="https://cdn.datatables.net/s/dt/dt-1.10.10,se-1.1.0/datatables.min.js"></script>
    <script src="https://gyrocode.github.io/jquery-datatables-checkboxes/1.2.6/js/dataTables.checkboxes.min.js"></script>
    <script>
        var selectedUsers = new Array();
        var adminAssigned="";
        $(document).ready(function () {
            $('#adminAssigned').on('change', function () {
                adminAssigned = $(this).val();
                console.log(adminAssigned);
                for (var ind in selectedUsers) {
                    ind.AssignToAdmin = adminAssigned;
                    console.log(selectedUsers);

                }
            });


        var table=$("#myTable").DataTable({
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {
                    "url": "/SuperAdmin/LoadUsersData",
                    "type": "POST",
                    "datatype": "json"
            },
            "drawCallback": function (settings) {
                // Here the response
                var response = settings.json;
                console.log(settings);
                console.log(response);
            },
                "columnDefs":
                    [{
                        "targets": 0,
                        "visible": true,
                        'checkboxes': {
                            'selectRow': true
                        },
                    },
                        {
                            "targets": [1],
                            "visible": true,
                            "searchable": true
                        },
                    ],

                "columns": [
                    { "data": "Name", "name": "Name", "autoWidth": true },
                    { "data": "Name", "name": "Name", "autoWidth": true }
            ],
            'select': {
                'style': 'multi'
            },

        });

            table.on('deselect', function (e, dt, type, indexes) {
                //get the row information for the row deselected.
                for (var ind of indexes) {
                    console.log(ind);
                    console.log(dt.row(ind).data())
                    var filtered = selectedUsers.filter((item) => item.RegistrationID !== dt.row(ind).data().RegistrationID);
                    selectedUsers = filtered;
                }
                //    for (var i = 0; i < selectedUsers.length; i++){
                //        var regId = dt.row(ind).data().RegistrationID;
                //        if (selectedUsers[i].RegistrationID == regId)
                //            selectedUsers[i].SelectedUsers = false;
                //    }
                //}
            });
            table.on('select', function (e, dt, type, indexes) {
                //get the row information for the row selected.
                console.log(indexes);
                for (var ind of indexes) {
                    var find = false;
                    for (var selected of selectedUsers) {
                        if (selected.RegistrationID == dt.row(ind).data().RegistrationID) {
                            find = true;
                            break;
                        }
                    }
                    if (!find) {
                        selectedUsers.push(dt.row(ind).data())
                    }
                }
                for (var sel of selectedUsers) {
                    sel.selectedUsers = true;
                }
            });
        });

    var ss = [];
    function Assignrole(id) {
        if ($('#' + id).is(":checked")) {
            ss.push(id);
        }
        else {
            const index = ss.indexOf(id)
            ss.splice(index, 1);
        }
        }

        function submit1(asd) {
            console.log($("#adminAssigned option:selected").val());
            var url = '@Url.Content("~/")' + "SuperAdmin/AssignRoles";
            $.post(url, { SelectedUsers: selectedUsers, assignToAdmin: adminAssigned }, function (data) {
                if (data) {
                    oTable = $('#myTable').DataTable();
                    oTable.draw();
                }
                else {
                    alert("Something Went Wrong!");
                }
            });
            console.log(ss);
            console.log('@Model.AssignToAdmin');
            console.log("BALAJI")
            selectedUsers = new Array();
        }



    </script>
